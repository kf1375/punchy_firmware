image: infinitecoding/platformio-for-ci:latest

pipelines:
  branches:
    main:
      - step:
          name: Build and Upload Binary
          script:
            # Fetch the version from version.txt
            - VERSION_FILE="version.txt"
            - if [ -f "$VERSION_FILE" ]; then
                VERSION=$(cat $VERSION_FILE);
              else
                echo "version.txt file not found!";
                exit 1;
              fi
            - echo "Current version = $VERSION"

            # Fetch the list of files in the Downloads section
            - RESPONSE=$(curl -s -u "$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD" \ 
              "https://api.bitbucket.org/2.0/repositories/$BITBUCKET_WORKSPACE/$BITBUCKET_REPOSITORY/downloads")
            
            # Parse the latest file uploaded
            - LATEST_FILE=$(echo "$RESPONSE" | jq -r '.values | sort_by(.created_on) | last(.[]).name')
            - echo "Latest uploaded file = $LATEST_FILE"

            # Check if the latest file matches the current version's binary
            - FILE_NAME="${VERSION}.bin"
            - if [ "$LATEST_FILE" = "$FILE_NAME" ]; then
                echo "Binary file ${FILE_NAME} already exists as the latest upload. Skipping upload.";
                exit 0;
              fi

            # Run PlatformIO build
            - platformio run

            # Find the generated binary file
            - PLATFORMIO_BIN=$(find .pio -name "*.bin" | head -n 1)
            - echo "Binary file generated $PLATFORMIO_BIN"
            - if [ -f "$PLATFORMIO_BIN" ]; then
                curl -u "$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD" \
                  -X POST "https://api.bitbucket.org/2.0/repositories/$BITBUCKET_WORKSPACE/$BITBUCKET_REPOSITORY/downloads" \
                  -F "files=@$PLATFORMIO_BIN"
              else
                echo "Binary file not found!"
                exit 1
              fi